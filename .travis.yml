language: csharp
dotnet: 3.0
mono: none
git:
  depth: false
cache:
  directories:
    - "/home/travis/.dotnet/tools"
    - "/home/travis/.local/share/powershell/Modules"
if: |
  repo != 3shapeAS/dockerbuild-pwsh OR \
  type = pull_request OR \
  branch = master OR \
  tag IS present
services:
  - docker
dist: bionic
addons:
  apt:
    sources:
      - sourceline: deb http://archive.ubuntu.com/ubuntu bionic main universe
      - sourceline:
          deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod
          bionic main
        key_url: https://packages.microsoft.com/keys/microsoft.asc
    packages:
      - powershell
install:
  - cd $TRAVIS_BUILD_DIR
  - export PATH="$PATH:$HOME/.dotnet/tools"
  - pwsh -f "./Install-Prerequisites.ps1"
  - export GitVersion_Version=$(dotnet gitversion -output json -showvariable majorminorpatch)
  - export GitVersion_PreReleaseTagWithDash=$(dotnet gitversion -output json -showvariable
    PreReleaseTagWithDash)
  - 'echo "GitVersion says version is : ${GitVersion_Version}"'
  - 'echo "GitVersion says prerelease tag is: ${GitVersion_PreReleaseTagWithDash}"'
script:
  - pwsh -f "./Invoke-Tests.ps1"
deploy:
  skip_cleanup: true
  provider: script
  script: pwsh -f "./Invoke-Publish.ps1"
  on:
    tags: true
    branch: master
notifications:
  email: false
  slack:
    rooms:
      - secure: "IMobdMPYgGTjG92BfGUYD5dJjSkl/UQilerckd+5v+FQC/Axo3oKW/qUzzgVa6HSSuWhXQZmHWs9mFaWysZ0NBNzCriXu5dP2ntHG6r3qINCX3AGZo3oQQdYB/v12ebUZOtmU6Xxvw4ZCZi8ZtoW9WyrdUs793bsZdLazXqvhUFCsDgZ/jkNt5BM1230vMqhi96TpvsTu8eUdV+r2FfyiSAG0sJZWp5v4rKbSJfpVDi6ndg1j3L9uXZjmKOQqmG/QtDmC8R8yRz7F0OmQ5Dd8vqg2bKNTQLBRKiUZWoJukSQi3A2HST7qvX6SAdAH/OV+BIFtlW7I+ROldLuyYJPKaDOcSj/aDZAdH9tji1J8kzQfM6Hsns2PLRIfB4PXJfNFJh+Vj23eW+mtSIayYAXGYJlvFwAxTkiWNokvJ4aBZ9HAjcnnTzJtUJq0oswVvIBQYZ/NLwMzeTjzeeuiDwN9FLZxt69woHDby44bD8IoAiNkLf6hUl952SDxbWoD02W8pwJUwgmSIgBFsqIR7VIu1HFe9yLJJ3BYZ6L0pnANV4kQIe/VOySxxDKlMprmhgBStusLwL5bl1PDilGECK8e843tRIkCHs5evxCWmAxcLXadqaFZywRQEpzvh5iyIH1xgS0kSRNFGHYKH3T+iLA8GzLIWAGx9LOQTzW/1DLyUg="
    on_success: always
    on_failure: always

after_success:
  - bash <(curl -s https://codecov.io/bash) -f coverage.json
