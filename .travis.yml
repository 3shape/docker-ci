language: csharp
dotnet: 3.0
mono: none

git:
  depth: false

cache:
  directories:
    - /home/travis/.dotnet/tools
    - /home/travis/.local/share/powershell/Modules

if: |
  repo != 3shapeAS/dockerbuild-pwsh OR \
  type = pull_request OR \
  branch = master OR \
  tag IS present

services:
  - docker

dist: bionic
addons:
  apt:
    sources:
      - sourceline: "deb http://archive.ubuntu.com/ubuntu bionic main universe"
      - sourceline: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main"
        key_url: "https://packages.microsoft.com/keys/microsoft.asc"
    packages:
      - powershell

install:
  - cd $TRAVIS_BUILD_DIR
  - export PATH="$PATH:$HOME/.dotnet/tools"
  - pwsh -f "./Install-Prerequisites.ps1"
  - export GitVersion_Version=$(dotnet gitversion -output json -showvariable majorminorpatch)
  - export GitVersion_PreReleaseTagWithDash=$(dotnet gitversion -output json -showvariable PreReleaseTagWithDash)
  - 'echo "GitVersion says version is : ${GitVersion_Version}"'
  - 'echo "GitVersion says prerelease tag is: ${GitVersion_PreReleaseTagWithDash}"'

script:
  - pwsh -f "./Invoke-Tests.ps1"

deploy:
  skip_cleanup: true
  provider: script
  script: pwsh -f "./Invoke-Publish.ps1"
  on:
    tags: true
    branch: master

notifications:
  email: false
  slack:
    on_success: always
    on_failure: always
    rooms:
      - secure: "mI1qCeu+NvpADnfcIBbP/fx8Aq3OhguVEZyCVAfZWuxCoI3o123ffM8dU4e4cNL+O0lPUOBSHwElLVGVI4W/liKjOd0ZNUA9Oc0XYnEU6ZB6/X6XTTaIngwxIKOb20V+SuUi8WnJcCh8jDWjWivRhHDG4HdsJnoUX0B9OVyZ7Ar1fivLmwW8ZZjOfPLcYhNFvoMY8WBdEJ2GzNV6G5a5WegOdhdi8o1yKJ8sOL+pM8Xg5XJs0mGBrBLe+0cqbhJKAjayjjIPibXVVVBYFdG0lTPt8aI/Xmv+/SZ7Z370YwOTOwoyTbnIEc6q7Jk3AgaJO9Sv10zLmanISWc4wFbsr6bO7cEbI0c+Jk89XmkwpFF/wSg1pNc4b2I9hZDQCvlBpCrqJ1ZKCpWZrfdxcayOJb8dhZPy3MY2PmxZ0kiGwTxPFE1qSw9NY58F/52AQmDSEVlOoNe6uPnl/ALkgu2fNz/7uD+nK2nMCUqPeogxcgCjTnNVVlwQh7qoZg995J3fiSNY6nt4iPaLaJPqXt1OHGrN980FUkrSv68tk7v3nEaoPfmwEOv+ZBe4sQ6/aljfmUiukuiftCnUPfHJRmXKqx48X3up1iKy2diincW7D4FAj6B+uLqDskGqkpJ199wmEGp8VBzI1peHZ735ODSe60rGpGkJIxExpwX1prj2etw="

after_success:
  # Upload coverage report to codecov
  - bash <(curl -s https://codecov.io/bash) -f coverage.json
